<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="hr.system.p0001">
	<resultMap id="p0001Result01" type="sawonVO">
		<result property="PK_SAWON_CODE" column="PK_SAWON_CODE" />
		<result property="SAWON_NAME" column="SAWON_NAME" />
		<result property="SAWON_ENG_NAME" column="SAWON_JOIN_DATE" />
		<result property="SAWON_RESIGNATION_DATE" column="SAWON_RESIGNATION_DATE" />
		<result property="SAWON_USER_STATUS" column="SAWON_USER_STATUS" />
		<result property="SAWON_PASSWORD" column="SAWON_PASSWORD" />
		<result property="SAWON_VIEW_PERMISSION" column="SAWON_VIEW_PERMISSION" />
		<result property="SAWON_EMAIL" column="SAWON_EMAIL" />
		<result property="FK_DEPT_CODE" column="FK_DEPT_CODE" />
		<result property="SAWON_INT_USER_ID" column="SAWON_INT_USER_ID" />
		<result property="SAWON_INT_DATE" column="SAWON_INT_DATE" />
		<result property="SAWON_MOD_USER_ID" column="SAWON_MOD_USER_ID" />
		<result property="SAWON_MOD_DATE" column="SAWON_MOD_DATE" />
	</resultMap>
	
	<!-- 비밀번호찾기 - 비밀번호 변경 -->
	<update id="update_pw" parameterType="hr.system.p0001.vo.SawonVO">
		update SAWON set SAWON_PASSWORD = #{SAWON_PASSWORD} where PK_SAWON_CODE = #{PK_SAWON_CODE}
	</update>
	
	<!-- 비밀번호찾기 - 아이디 유효성 검사 -->
	<select id="check_id" parameterType="String" resultType="String">
		select PK_SAWON_CODE from SAWON where PK_SAWON_CODE = #{PK_SAWON_CODE}
	</select>
	
	<!-- 비밀번호찾기 - 이메일 유효성 검사 -->
	<select id="find_by_Email" parameterType="String" resultType="String">
		select SAWON_EMAIL
		from SAWON
		where SAWON_EMAIL = #{SAWON_EMAIL}
		and PK_SAWON_CODE = #{PK_SAWON_CODE}
	</select>
	
	<select id="selectMember4Login" parameterType="hr.system.p0001.vo.LoginVO" resultType="hr.system.p0001.vo.SawonVO" >
        SELECT PK_SAWON_CODE, SAWON_NAME, SAWON_VIEW_PERMISSION
          FROM SAWON 
         WHERE SAWON_USER_STATUS='Y' 
           AND PK_SAWON_CODE = #{ PK_SAWON_CODE } AND SAWON_PASSWORD = #{ SAWON_PASSWORD }
    </select> 
    
    <insert id="insertLogIn" parameterType="String">
    	INSERT INTO COM_LOGINOUT (LNO, USERNO, LTYPE, LDATE)
    	 	              VALUES ((SELECT NVL(MAX(LNO)+1,0) FROM COM_LOGINOUT), #{ PK_SAWON_CODE }, 'I', to_char(sysdate,'yyyy.mm.dd hh24:mi') )
    </insert>

    <insert id="insertLogOut" parameterType="String">
    	INSERT INTO COM_LOGINOUT (LNO, USERNO, LTYPE, LDATE)
    	 	              VALUES ((SELECT NVL(MAX(LNO)+1,0) FROM COM_LOGINOUT), #{ PK_SAWON_CODE }, 'O', to_char(sysdate,'yyyy.mm.dd hh24:mi') )
    </insert>
    
    <sql id="includeSignDocType">
        WHERE DOCTYPE_DELETEFLAG='N'
        <if test="searchKeyword!=null and searchKeyword!='' and searchType!=''">
            <foreach item="item" index="index" collection="searchTypeArr" separator=" OR " open="AND (" close=")">
                 ${item} LIKE CONCAT('%', #{searchKeyword},'%' )
            </foreach>
        </if>               
    </sql>

    <select id="selectSignDocTypeCount" resultType="Integer" parameterType="project.common.SearchVO">
        SELECT COUNT(*)
          FROM DOCTYPE SDT
         <include refid="includeSignDocType"/>
    </select>
    
    <sql id="includeCode">
        WHERE 1=1
        <if test="searchKeyword!=null and searchKeyword!='' and searchType!=''">
            <foreach item="item" index="index" collection="searchTypeArr" separator=" OR " open="AND (" close=")">
                 ${item} LIKE CONCAT('%', #{searchKeyword},'%' )
            </foreach>
        </if>               
    </sql> 
    
    <select id="selectSignDocTypeList" resultType="hr.system.p0001.vo.SignDocTypeVO" parameterType="project.common.SearchVO">
        SELECT PK_DOCTYPE_NUM, DOCTYPE_DTTITLE, DOCTYPE_DTCONTENTS, DOCTYPE_DELETEFLAG
		FROM (SELECT ROWNUM as NO, PK_DOCTYPE_NUM, DOCTYPE_DTTITLE, DOCTYPE_DTCONTENTS, DOCTYPE_DELETEFLAG
		      FROM DOCTYPE SDT
		      ORDER by PK_DOCTYPE_NUM DESC) A
		<include refid="includeCode"/>
      	<if test="rowStart != null">
			AND NO BETWEEN ${rowStart-1} AND ${rowStart+9}
         </if>
          AND DOCTYPE_DELETEFLAG='N'
    </select> 

    <insert id="insertSignDocType" parameterType="java.util.Map" >
    	<selectKey resultType="string" keyProperty="PK_DOCTYPE_NUM" order="BEFORE">
    		SELECT NVL(MAX(PK_DOCTYPE_NUM)+1, 1) FROM DOCTYPE
    	</selectKey>
        INSERT INTO DOCTYPE(PK_DOCTYPE_NUM, DOCTYPE_DTTITLE, DOCTYPE_DTCONTENTS, DOCTYPE_DELETEFLAG, DOCTYPE_INT_USER_ID, DOCTYPE_INT_DATE)
        VALUES (#{PK_DOCTYPE_NUM}, #{DOCTYPE_DTTITLE}, #{DOCTYPE_DTCONTENTS}, 'N', #{PK_SAWON_CODE}, to_char(sysdate,'yyyy.mm.dd hh24:mi'))
    </insert>
    
    <update id="updateSignDocType" parameterType="java.util.Map">
        UPDATE DOCTYPE
           SET DOCTYPE_DTTITLE=#{DOCTYPE_DTTITLE}, DOCTYPE_DTCONTENTS=#{DOCTYPE_DTCONTENTS}, DOCTYPE_MOD_USER_ID=#{PK_SAWON_CODE}, DOCTYPE_MOD_DATE=to_char(sysdate,'yyyy.mm.dd hh24:mi')
         WHERE PK_DOCTYPE_NUM=#{PK_DOCTYPE_NUM} 
    </update> 
        
    <select id="selectSignDocTypeOne" parameterType="hr.system.p0001.vo.SignDocTypeVO" resultType="hr.system.p0001.vo.SignDocTypeVO">
        SELECT PK_DOCTYPE_NUM, DOCTYPE_DTTITLE, DOCTYPE_DTCONTENTS
          FROM DOCTYPE SDT
         WHERE DOCTYPE_DELETEFLAG='N' AND PK_DOCTYPE_NUM=#{PK_DOCTYPE_NUM}
    </select> 
    
    <delete id="deleteSignDocType" parameterType="hr.system.p0001.vo.SignDocTypeVO">
        UPDATE DOCTYPE
           SET DOCTYPE_DELETEFLAG='Y'
         WHERE PK_DOCTYPE_NUM=#{PK_DOCTYPE_NUM} 
    </delete>

	<select id="searchList" resultMap="p0001Result01" parameterType="java.util.Map"> 
      <![CDATA[
         SELECT 
		    PK_SAWON_CODE,
		    SAWON_NAME,
		    SAWON_ENG_NAME,
		    SAWON_JOIN_DATE,
		    SAWON_RESIGNATION_DATE,
		    SAWON_USER_STATUS,
		    SAWON_PASSWORD,
		    SAWON_VIEW_PERMISSION,
		    SAWON_EMERGENCY_CON_NET,
		    FK_DEPT_CODE,
		    SAWON_INT_USER_ID,
		    SAWON_INT_DATE,
		    SAWON_MOD_USER_ID,
		    SAWON_MOD_DATE
		FROM SAWON;
      ]]>
		<where>
			<if test=" p_id != ''  and  p_id != null">
				PK_SAWON_CODE = #{p_id}
			</if>
		</where>
	</select>

	<!-- 인사기록카드 사원목록 -->
	<select id="ISA" resultMap="p0001Result01" parameterType="java.util.Map"> 
    	SELECT PK_SAWON_CODE, SAWON_NAME
          FROM SAWON 
    </select> 
	
		<!-- 인사코드 -->
	<resultMap id="codeResult01" type="insaCodeVO">
		<result property="pk_PERSON_BC_CODE_NUM" column="pk_PERSON_BC_CODE_NUM" />
		<result property="person_BC_OUTPUT" column="person_BC_OUTPUT" />
		<result property="person_BC_MNGEMENT_NAME" column="person_BC_MNGEMENT_NAME" />
		<result property="person_BC_MODIFY_WHE" column="person_BC_MODIFY_WHE" />
		<result property="person_BC_INT_USER_ID" column="person_BC_INT_USER_ID" />
		<result property="person_BC_INT_DATE" column="person_BC_INT_DATE" />
		<result property="person_BC_MOD_USER_ID" column="person_BC_MOD_USER_ID" />
		<result property="person_BC_MOD_DATE" column="person_BC_MOD_DATE" />
	</resultMap>

	<select id="outPut" resultMap="codeResult01" parameterType="java.util.Map"> 
      <![CDATA[
         select PK_PERSON_BC_CODE_NUM, PERSON_BC_MNGEMENT_NAME, PERSON_BC_MODIFY_WHE
         from   PERSON_BC
      ]]>
		<where>
			<if test="person_BC_OUTPUT != '' and person_BC_OUTPUT != null">
				person_BC_OUTPUT = #{person_BC_OUTPUT}
			</if>
		</where>
		<![CDATA[
			ORDER BY pk_PERSON_BC_CODE_NUM asc
		]]>
	</select>
	
	<select id="deTai" resultMap="codeResult01" parameterType="java.util.Map"> 
      <![CDATA[
         select PK_PERSON_BC_DETAI_CODE_NUM, PERSON_BC_DETAI_MNGEMENT_NAME, PERSON_BC_DETAI_REMARKS, PERSON_BC_DETAI_NOT_USE, fk_PERSON_BC_CODE_NUM
         from   PERSON_BC_DETAI
      ]]>
		<where>
			<if test="fk_PERSON_BC_CODE_NUM != '' and fk_PERSON_BC_CODE_NUM != null">
				fk_PERSON_BC_CODE_NUM = #{fk_PERSON_BC_CODE_NUM}
			</if>
		</where>
	</select>

	<!--  -->
	<select id="ISA_c" resultMap="codeResult01" parameterType="java.util.Map"> 
      <![CDATA[
         select PERSON_BC_DETAI_MNGEMENT_NAME, fk_PERSON_BC_CODE_NUM
         from   PERSON_BC_DETAI
      ]]>
	</select>


	<update id="updateData" parameterType="java.util.Map">
		update PERSON_BC_DETAI
		set  pk_PERSON_BC_DETAI_CODE_NUM = #{pk_PERSON_BC_DETAI_CODE_NUM,jdbcType=VARCHAR}
		   , person_BC_DETAI_MNGEMENT_NAME = #{person_BC_DETAI_MNGEMENT_NAME,jdbcType=VARCHAR}
		   , person_BC_DETAI_REMARKS = #{person_BC_DETAI_REMARKS,jdbcType=VARCHAR}
		   , person_BC_DETAI_NOT_USE = #{person_BC_DETAI_NOT_USE,jdbcType=VARCHAR}
		where pk_PERSON_BC_DETAI_CODE_NUM = #{copy_CODE_NUM, jdbcType=VARCHAR}
		and fk_person_bc_code_num = #{fk_PERSON_BC_CODE_NUM, jdbcType=VARCHAR}
	</update>	
	
	<insert id="insertData" parameterType="java.util.Map">
		insert into PERSON_BC_DETAI(PK_PERSON_BC_DETAI_CODE_NUM, PERSON_BC_DETAI_MNGEMENT_NAME, PERSON_BC_DETAI_REMARKS, PERSON_BC_DETAI_NOT_USE, FK_PERSON_BC_CODE_NUM) 
		values(#{pk_PERSON_BC_DETAI_CODE_NUM,jdbcType=VARCHAR}, #{person_BC_DETAI_MNGEMENT_NAME,jdbcType=VARCHAR}, #{person_BC_DETAI_REMARKS,jdbcType=VARCHAR}, #{person_BC_DETAI_NOT_USE,jdbcType=VARCHAR},#{fk_PERSON_BC_CODE_NUM, jdbcType=VARCHAR})
	</insert>	
	
	<delete id="deleteData" parameterType="java.util.Map">
		delete PERSON_BC_DETAI
		where pk_PERSON_BC_DETAI_CODE_NUM = #{pk_PERSON_BC_DETAI_CODE_NUM}
	</delete>
</mapper>